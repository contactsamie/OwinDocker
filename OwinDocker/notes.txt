?# NEVER INCLUDE DOCKER FILE INTO VS PROJECT!!!!!
# We use the microsoft/aspnet image as a starting point.
FROM microsoft/aspnet
 
#docker ps -a
#docker images
#
#docker rm $(docker ps -a -q)
#docker rmi $(docker images -q)
#
 
#docker build -t owindocker:v1 .
#docker run -t -i -d -P owindocker:v1
 
RUN apt-get update && apt-get install mono-4.0-service -y
 
RUN mkdir -p /app
COPY . /app
 
WORKDIR /app
CMD [ "mono",  "./OwinDocker.exe" ]
 
EXPOSE 9000




Use the docker login command to log into the Docker Hub from the command line.
The format for the login command is:
docker login --username=yourhubusername --email=youremail@company.com
When prompted, enter your password and press enter. So, for example:
$ docker login --username=maryatdocker --email=mary@docker.com
Password:
WARNING: login credentials saved in C:\Users\sven\.docker\config.json
Login Succeeded


$ docker tag 7d9495d03763 maryatdocker/docker-whale:latest


#docker tag owindocker contactsamie/owindocker
#docker push  contactsamie/owindocker

==================================================


docker build -t owindocker:v1.95 .
docker run -t -i -d   --name=owindocker owindocker:v1.95
(SET EXTERNAL PORT TO 8099)


FROM microsoft/aspnet

RUN apt-get update && apt-get install mono-4.0-service -y

RUN mkdir -p /app
COPY ./bin/Debug /app
 
WORKDIR /app
CMD [ "mono",  "./owindocker.exe" ]
 
EXPOSE 8099



-bash-4.2# docker login --username=xxxxxxx --email=xxxxxxxx.xxxxxxx@gmail.com

docker tag owindocker:v1.95 contactsamie/owindocker:v1
docker push contactsamie/owindocker:v1


EITHER FROM UPPER FOLDER

docker-compose up -d

OR

docker build -t owindocker-client:v5 .
docker run -t -i -d -name=owindocker-client  owindocker-client:v5
docker run -t -i -d --link owindocker  --name=owindocker-client  owindocker-client:v5
docker attach owindocker-client



docker-compose up -d
is same as 
docker build -t commander commander
docker run -d --name frontend -e VAR1=value -p 8081:8081
   --link backend:redis commander

   Each service needs to point to an image or build directory; all other keywords (links, ports, environment, restart) correspond to docker options.
docker-compose up -d builds images if needed.
docker-compose ps shows running containers.

docker-compose stop && docker-compose rm -v 
stops and removes all containers